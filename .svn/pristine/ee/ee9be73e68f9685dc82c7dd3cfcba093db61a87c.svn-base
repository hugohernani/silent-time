package broadcasts;

import ia.hugo.silencetime.R;
import services.AlarmesService;
import services.CancelarModoSom;
import services.CancelarModoVibratorio;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.media.AudioManager;
import android.os.Bundle;
import android.os.PowerManager;
import android.util.Log;

public class IniciarNotificacao extends BroadcastReceiver {
	
	public static final String ID_EVENTO_AGENDAMENTO = "id_evento_agendamento";
	public static final String TITULO_AGENDAMENTO = "titulo_agendamento";
	public static final String DATA_INICIAL_AGENDAMENTO = "data_inicial_agendamento";

	private Notification.Builder builderNotification;
	private NotificationManager notificationManager;

	
	
	@Override
	public void onReceive(Context context, Intent intent) {
		
		Log.i(IniciarNotificacao.class.getName(), "Iniciando o onReceive de " +
				IniciarNotificacao.class.getName());
		
		notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);

		PowerManager pm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);
        PowerManager.WakeLock wl = pm.newWakeLock(PowerManager.PARTIAL_WAKE_LOCK, "PARTIAL_WAKE_LOCK");
        //Acquire the lock
        wl.acquire();
        
    	Bundle extras = intent.getExtras();
    	
    	Long id_evento_agendamento = extras.getLong(ID_EVENTO_AGENDAMENTO, -1L);
    	String titulo_agendamento = extras.getString(TITULO_AGENDAMENTO, "");
    	Long data_inicial_agendamento = extras.getLong(DATA_INICIAL_AGENDAMENTO, -1L);
        
        if (intent.getBooleanExtra(AlarmesService.CRIAR_NOTIFICACAO_PARA_VIBRACAO, Boolean.FALSE)){

        	createNotificationVibrate(context, id_evento_agendamento,
					titulo_agendamento, data_inicial_agendamento);

        }else{
        	
//			createNotificationSound(agendamento.getId_evento(),
//			agendamento.getTitulo(), agendamento.getDataFinal());

        }

	}
	
	
	private void createNotificationVibrate(final Context context,
			final Long id_evento, String titulo, final Long time) {

		Intent i = new Intent(context, CancelarModoVibratorio.class);
		i.putExtra("id_evento", id_evento);
		
		PendingIntent pi = PendingIntent.getService(context, 0, i, 0);
		
		builderNotification = new Notification.Builder(context)
				.setContentTitle(titulo)
				.setContentText("Entrará no modo vibratório em 10 segundos")
				.setSmallIcon(R.drawable.ic_launcher)
				.setContentIntent(pi)
				.setShowWhen(true)
				.setDefaults(Notification.DEFAULT_SOUND)
				.setWhen(time)
				.setAutoCancel(true);
		new Thread(new Runnable() {
			
			@Override
			public void run() {
				builderNotification.setProgress(10, 10, false);
				notificationManager.notify(id_evento.intValue(), builderNotification.build());
				builderNotification.setDefaults(Notification.DEFAULT_LIGHTS);

				for (int j = 9; j >= 0; j--) {
					builderNotification.setContentText("Entrará no modo vibratório em " +
				j + " segundos");
					builderNotification.setProgress(10, j+1, false);
					notificationManager.notify(id_evento.intValue() + time.intValue(), builderNotification.build());
					try{
						Thread.sleep(1000);
					}catch(InterruptedException i){
						Log.i("ErroNotification", "Notification can't sleep. Sleep failure");
						i.printStackTrace();
					}
				}
				builderNotification.setProgress(0, 0, false);
				builderNotification.setContentText("Entrando no modo vibratório...");
				notificationManager.notify(id_evento.intValue() + time.intValue(), builderNotification.build());

				try{
					Thread.sleep(2000);

					AudioManager audioManager = (AudioManager) context.getSystemService(Context.AUDIO_SERVICE);
					audioManager.setRingerMode(AudioManager.RINGER_MODE_VIBRATE);
					
					notificationManager.cancel(id_evento.intValue() + time.intValue());

				}catch(InterruptedException i){
					Log.i("ErroNotification", "Notification can't sleep. Sleep failure");
					i.printStackTrace();
				}

			}
		}).start();
	}

	private void createNotificationSound(final Context context,
			final Long id_evento, String titulo, final Long time) {

		Intent i = new Intent(context, CancelarModoSom.class);
		i.putExtra("id_evento", id_evento);
		PendingIntent pi = PendingIntent.getService(context, 0, i, 0);
		
		builderNotification = new Notification.Builder(context)
				.setContentTitle(titulo)
				.setContentText("Entrará no modo som")
				.setSmallIcon(R.drawable.ic_launcher)
				.setContentIntent(pi)
				.setWhen(time)
				.setDefaults(Notification.DEFAULT_VIBRATE)
				.setAutoCancel(true);
		new Thread(new Runnable() {
			
			@Override
			public void run() {
				for (int j = 10; j >= 0; j--) {
					builderNotification.setProgress(10, j, false);
					
					final int idNotificacao = id_evento.intValue() + time.intValue();
					
					notificationManager.notify(idNotificacao, builderNotification.build());
					try{
						Thread.sleep(1000);
					}catch(InterruptedException i){
						Log.i("ErroNotification", "Notification can't sleep. Sleep failure");
						i.printStackTrace();
					}
				}

				builderNotification.setProgress(0, 0, false);
				builderNotification.setContentInfo("Entrando em modo som");

				try{
					Thread.sleep(2000);

					final int idNotificacao = id_evento.intValue() + time.intValue();
					
					notificationManager.cancel(idNotificacao);
					
					AudioManager audioManager = (AudioManager) context.getSystemService(Context.AUDIO_SERVICE);
					audioManager.setRingerMode(AudioManager.RINGER_MODE_NORMAL);
					
				}catch(InterruptedException i){
					Log.i("ErroNotification", "Notification can't sleep. Sleep failure");
					i.printStackTrace();
				}

			}
		}).start();
	}

}
