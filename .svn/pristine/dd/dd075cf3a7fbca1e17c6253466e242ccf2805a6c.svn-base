package ia.hugo.silencetime;

import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.List;

import persistencia.AgendamentoSilenciosoDao;
import persistencia.TASDao;

import utils.TASAdapter;

import model.Agendamento;
import model.TempoAgendamentoSugestao;

import android.os.Bundle;
import android.provider.CalendarContract;
import android.provider.CalendarContract.Events;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.ListActivity;
import android.content.DialogInterface;
import android.content.Intent;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.EditText;
import android.widget.Spinner;
import android.widget.Toast;

public class ListaSugestoesAgendamentoActivity extends ListActivity
	implements OnItemClickListener{
	
	private List<TempoAgendamentoSugestao> lista;
	private TASAdapter adapterTas;
	private TASDao daoTas;
	

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_lista_sugestoes_agendamento);
		
		daoTas = new TASDao(this);
		
		lista = daoTas.getAll();
		adapterTas = new TASAdapter(this, lista);
		setListAdapter(adapterTas);
		
	}
	
	@Override
	protected void onResume() {
		super.onResume();
		
		getListView().setOnItemClickListener(this);
		
	}
	

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.lista_sugestoes_agendamento, menu);
		return true;
	}
	
	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		
		switch (item.getItemId()) {
		case R.id.itDeleteAllSugestoesAgendamento:
			if (daoTas.deleteAll()){
				Toast.makeText(this, "Todas as sugestões foram apagadas!", Toast.LENGTH_LONG).show();
				adapterTas.clear();
			}
			break;

		default:
			break;
		}
		
		return super.onOptionsItemSelected(item);
	}

	@Override
	public void onItemClick(AdapterView<?> adapter, View view, int position, final long id) {
		Toast.makeText(getApplicationContext(), "clickou!", Toast.LENGTH_SHORT).show();
		
		// TODO Colocar todo o contéudo abaixo em um DialogFragment!! Verificar os itens da view
		// alert_dialog_view_sugestao_agendamento para fazer referência a mesma
		
		/*
		final TempoAgendamentoSugestao tas = adapterTas.getItem(position);
		
		AlertDialog.Builder builder = new AlertDialog.Builder(this);
		View view_click_sugestao = findViewById(R.layout.alert_dialog_view_sugestao_agendamento);
		
		final EditText etTitulo = (EditText) view_click_sugestao.findViewById(R.id.etTituloDialogTAS);
		final EditText etDescricao = (EditText) view_click_sugestao.findViewById(R.id.etDescricaoDialogTAS);
		final Spinner spMes = new Spinner(context)
		
		
		etTitulo.setText(tas.getTitulo());
		etDescricao.setText(tas.getDescricao());

		
		builder.setView(view_click_sugestao);
		builder.setTitle("Sugestão de Agendamento");
		builder.setNegativeButton("Apagar", new DialogInterface.OnClickListener() {
			
			@Override
			public void onClick(DialogInterface dialog, int which) {
				if (daoTas.deleteById(id)){
					Toast.makeText(getApplicationContext(), "Sugestão apagada!", Toast.LENGTH_SHORT).show();
				}
			}
		});
		builder.setNeutralButton("Cancelar", new DialogInterface.OnClickListener() {
			
			@Override
			public void onClick(DialogInterface dialog, int which) {
				Toast.makeText(getApplicationContext(), "Cancelado.", Toast.LENGTH_SHORT).show();
			}
		});
		builder.setPositiveButton("Usar", new DialogInterface.OnClickListener() {
			
			@Override
			public void onClick(DialogInterface dialog, int which) {
				
				String titulo = etTitulo.getText().toString();
				String descricao = etDescricao.getText().toString();
				
				if (!titulo.isEmpty()){
					if (!descricao.isEmpty()){
						
						Calendar calendarioInicio = new GregorianCalendar();
						calendarioInicio.set(calendarioInicio.get(Calendar.YEAR),
								calendarioInicio.get(Calendar.MONTH), 
								tas.getDiaDaSemana(), tas.getHora(), tas.getMinuto());
						
						Calendar calendarioTermino = calendarioInicio;
						
						if()
						
						calendarioTermino.add(field, value)
						
						Intent intent = new Intent(Intent.ACTION_INSERT);
						intent.setData(Events.CONTENT_URI);
						intent.putExtra(CalendarContract.EXTRA_EVENT_BEGIN_TIME, calendarioInicio.getTimeInMillis());
						
						Agendamento agendamento = new Agendamento();
						agendamento.setTitulo(titulo);
						agendamento.setDescricao(descricao);
						
						AgendamentoSilenciosoDao daoAgendamento = new AgendamentoSilenciosoDao(getApplicationContext());
						daoAgendamento.open();
						Toast.makeText(getApplicationContext(), "O item foi adicionado a lista de agendamentos da aplicação", Toast.LENGTH_LONG).show();

					}
				}
				
			}
		})
		*/
		
	}

}
