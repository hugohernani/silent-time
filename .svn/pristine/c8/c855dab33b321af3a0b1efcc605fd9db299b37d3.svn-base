package services;

import ia.hugo.silencetime.R;

import java.util.ArrayList;
import java.util.List;

import model.Agendamento;
import persistencia.EventsAndroid;
import android.app.AlarmManager;
import android.app.IntentService;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.media.AudioManager;
import android.util.Log;
import android.widget.Toast;

public class AlarmesService extends IntentService{
		
	private Notification.Builder builderNotification;
	private NotificationManager notificationManager;
	
	@Override
	public void onCreate() {
		super.onCreate();
	}
	
	@Override
	public int onStartCommand(Intent intent, int flags, int startId) {
		Log.w("alarmService-StartCommand", "StartComand starting...");
		
		notificationManager = (NotificationManager) this.getSystemService(NOTIFICATION_SERVICE);
		onHandleIntent(intent);
		return START_STICKY;
	}
	
	public AlarmesService() {
		super("AlarmesService");
	}

	@Override
	protected void onHandleIntent(Intent intent) {
		Log.w("alarmService-onHandleIntent", "Iniciando o onHandleIntent");
		
		EventsAndroid events = new EventsAndroid(getBaseContext());
		
		ArrayList<Agendamento> lista = events.getEvents(intent.getLongExtra("calendarTimeInMillis", -1L));
		
		if(lista.isEmpty()){
			Toast.makeText(getBaseContext(), "Nao h· agendamentos para este(s) dia(s)!", Toast.LENGTH_LONG).show();
		}else{
			for (final Agendamento agendamento : lista) {

				createNotificationVibrate(agendamento.getId_evento(),
						agendamento.getTitulo(), agendamento.getDataInicial());
				
//				createNotificationSound(agendamento.getId_evento(),
//						agendamento.getTitulo(), agendamento.getDataFinal());

			}
		}
		stopSelf();
	}

	private void createNotificationVibrate(final Long id_evento, String titulo, long time) {
		
		final Context mContexto = this;
		Intent i = new Intent(this, CancelarModoVibratorio.class);
		i.putExtra("id_evento", id_evento);
		
		PendingIntent pi = PendingIntent.getService(this, 0, i, 0);
		
		builderNotification = new Notification.Builder(this)
				.setContentTitle(titulo)
				.setContentText("Entrar√° no modo vibrat√≥rio em 10 segundos")
				.setSmallIcon(R.drawable.ic_launcher)
				.setContentIntent(pi)
				.setShowWhen(true)
				.setDefaults(Notification.DEFAULT_SOUND)
				.setWhen(time)
				.setAutoCancel(true);
		new Thread(new Runnable() {
			
			@Override
			public void run() {
				builderNotification.setProgress(10, 10, false);
				notificationManager.notify(id_evento.intValue(), builderNotification.build());
				builderNotification.setDefaults(Notification.DEFAULT_LIGHTS);

				for (int j = 9; j >= 0; j--) {
					builderNotification.setContentText("Entrar√° no modo vibrat√≥rio em " +
				j + " segundos");
					builderNotification.setProgress(10, j+1, false);
					notificationManager.notify(id_evento.intValue(), builderNotification.build());
					try{
						Thread.sleep(1000);
					}catch(InterruptedException i){
						Log.i("ErroNotification", "Notification can't sleep. Sleep failure");
						i.printStackTrace();
					}
				}
				builderNotification.setProgress(0, 0, false);
				builderNotification.setContentText("Saindo do modo vibrat√≥rio");
				notificationManager.notify(id_evento.intValue(), builderNotification.build());

				try{
					Thread.sleep(4000);

					AudioManager audioManager = (AudioManager) mContexto.getSystemService(Context.AUDIO_SERVICE);
					audioManager.setRingerMode(AudioManager.RINGER_MODE_VIBRATE);
					
					notificationManager.cancel(id_evento.intValue());

				}catch(InterruptedException i){
					Log.i("ErroNotification", "Notification can't sleep. Sleep failure");
					i.printStackTrace();
				}

			}
		}).start();
	}
	
	private void createNotificationSound(final Long id_evento, String titulo, long time) {

		final Context mContexto = this;
		Intent i = new Intent(this, CancelarModoSom.class);
		i.putExtra("id_evento", id_evento);
		PendingIntent pi = PendingIntent.getService(this, 0, i, 0);
		
		builderNotification = new Notification.Builder(this)
				.setContentTitle(titulo)
				.setContentText("Entrar√° em modo vibrat√≥rio")
				.setSmallIcon(R.drawable.ic_launcher)
				.setContentIntent(pi)
				.setWhen(time)
				.setDefaults(Notification.DEFAULT_VIBRATE)
				.setAutoCancel(true);
		new Thread(new Runnable() {
			
			@Override
			public void run() {
				for (int j = 10; j >= 0; j--) {
					builderNotification.setProgress(10, j, false);
					
					notificationManager.notify(id_evento.intValue(), builderNotification.build());
					try{
						Thread.sleep(1000);
					}catch(InterruptedException i){
						Log.i("ErroNotification", "Notification can't sleep. Sleep failure");
						i.printStackTrace();
					}
				}

				builderNotification.setProgress(0, 0, false);
				builderNotification.setContentInfo("Entrando em modo vibrat√≥rio");

				try{
					Thread.sleep(4000);
					notificationManager.cancel(id_evento.intValue());
					
					AudioManager audioManager = (AudioManager) mContexto.getSystemService(Context.AUDIO_SERVICE);
					audioManager.setRingerMode(AudioManager.RINGER_MODE_NORMAL);
					
				}catch(InterruptedException i){
					Log.i("ErroNotification", "Notification can't sleep. Sleep failure");
					i.printStackTrace();
				}

			}
		}).start();
	}

}